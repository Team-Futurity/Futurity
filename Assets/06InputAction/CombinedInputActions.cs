//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/06InputAction/CombinedInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CombinedInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CombinedInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CombinedInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""2928d849-cc24-4e7f-8b5e-c9d1d9f2ea6c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""c4889bac-3069-4e0e-98b4-cfc16905ac27"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""53c56247-c626-4970-9794-8575c9bef682"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BasicAttack"",
                    ""type"": ""Button"",
                    ""id"": ""68b91ea3-4a74-47d7-8f9f-f3f0ed0e936f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialAttack"",
                    ""type"": ""Button"",
                    ""id"": ""5029c9a5-a69a-45fe-92fd-385fcb27d221"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveSkill"",
                    ""type"": ""Button"",
                    ""id"": ""1e0edb19-e232-47ba-9f59-71cb6304d984"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""4055a378-a71b-4ff8-8992-bb7a364aaf0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UI"",
                    ""type"": ""Button"",
                    ""id"": ""564aa9da-d07f-40f4-be32-fb982f14cfa6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ESC"",
                    ""type"": ""Button"",
                    ""id"": ""612ca7c6-6f8f-475b-9e6c-f015c8df50e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""67ba8e8c-2bb3-4e79-9369-8091f55ea425"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""87f1a25c-0e0f-4ec8-aa01-60a56293d009"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""818fbadf-e55f-4a41-b014-76f8e0dada23"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9e80dad7-5bc0-40de-871c-42b4efb09b59"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""546225ec-973d-450d-96a6-5d4bdb93a03c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""LeftStick"",
                    ""id"": ""54ecc5b2-71fc-4298-8679-310259fffee8"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cf4c2d6f-7946-4852-9fbe-ac753ea017b6"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Pad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6ba2bdb7-f2e9-4156-acb0-04d7decd9d51"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Pad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""06511b8f-1fe8-481f-a670-b47824bf9075"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Pad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""73ae9ef5-a084-44f1-a3a2-3f79a3dfaf10"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Pad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f44e3b26-a891-4f01-95b3-c6dd95a2e540"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9985bc40-e710-4f5b-b4a3-cd61bb9c986f"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Pad"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6dd1cf22-15d9-4d6a-b496-0e1b0ab8f2a1"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""BasicAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""346189d4-7687-49cc-a957-8a4df2cdec98"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Pad"",
                    ""action"": ""BasicAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5267d10c-7d2f-41f5-87f2-ed36e6db294a"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""SpecialAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7991d7e4-3ad4-42b3-a139-f76636ddb2d8"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;Pad"",
                    ""action"": ""SpecialAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce66eb29-45bb-4282-9a7f-281d04ef057a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""ActiveSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""833c266f-d4b1-4207-a4e0-c5a767b53f02"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Pad"",
                    ""action"": ""ActiveSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2618a82-d8ca-4366-a702-ff54adc73b56"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""462a2937-f193-4c5d-9ddb-4445a1838e18"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee451e5c-b73f-43b5-a2a4-7065a8c5b0c6"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb0b776a-b5f7-4e29-a9eb-ce2c7ec867f2"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI Behaviour"",
            ""id"": ""7dc380f0-b2bc-47e8-bba5-1d31719ac21f"",
            ""actions"": [
                {
                    ""name"": ""Click UI"",
                    ""type"": ""Button"",
                    ""id"": ""101170aa-fffb-407f-b20e-46c59c6c0fa9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move To Previous UI"",
                    ""type"": ""Button"",
                    ""id"": ""f104bd0d-710d-46b5-a2a1-97094dc7f1f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move To Next UI"",
                    ""type"": ""Button"",
                    ""id"": ""6150aff0-ebd7-4fa7-aa48-84eb9abb78a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftKey"",
                    ""type"": ""Button"",
                    ""id"": ""fbb317d2-62a9-4177-a8ee-21fcd85c7f7c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightKey"",
                    ""type"": ""Button"",
                    ""id"": ""95354754-51de-47e7-811a-ece0b2795050"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ESC"",
                    ""type"": ""Button"",
                    ""id"": ""a9ba9f15-778d-442b-a76f-17e362c6f01c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c6103c6d-6f27-4c63-9aa2-c1c35fd5a8b0"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move To Next UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bfefc28-1b38-407c-b0e8-8e12050af358"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Pad"",
                    ""action"": ""Move To Next UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fad159e3-501c-4a88-bd87-2afff3291b78"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move To Previous UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""225ea4aa-baf7-4c07-b7b9-e634082ac20b"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Pad"",
                    ""action"": ""Move To Previous UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b3cb040-70c3-43aa-b833-ff3455c97875"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Click UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1a22b6d-21fe-46bf-999d-eaeef80b69f0"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Pad"",
                    ""action"": ""Click UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a615ca70-88a7-4969-8999-617e7244eb5e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2ac06c9-8365-43f1-acfd-df9f20322d97"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cde3c13c-f7b1-49a1-a0e0-63c4eaeef600"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c3f74d5-f2fe-4054-8d03-070a6d4be76f"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad05175b-3b5a-4bee-ab47-17716fceafd8"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debug"",
            ""id"": ""7b192005-3f08-4dbf-9d83-6dc779073090"",
            ""actions"": [
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""d349d67f-3795-4f4b-8b25-5532b88a0ac0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleDebug"",
                    ""type"": ""Button"",
                    ""id"": ""c0de7bc9-d4bf-4936-9471-9ad116c85efe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2d7677e5-84d8-4cc9-b866-0aa6082bbe23"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleDebug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a94ee6b3-6f38-4e66-b5c2-175012202ed6"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Pad"",
            ""bindingGroup"": ""Pad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Dash = m_Player.FindAction("Dash", throwIfNotFound: true);
        m_Player_BasicAttack = m_Player.FindAction("BasicAttack", throwIfNotFound: true);
        m_Player_SpecialAttack = m_Player.FindAction("SpecialAttack", throwIfNotFound: true);
        m_Player_ActiveSkill = m_Player.FindAction("ActiveSkill", throwIfNotFound: true);
        m_Player_Interaction = m_Player.FindAction("Interaction", throwIfNotFound: true);
        m_Player_UI = m_Player.FindAction("UI", throwIfNotFound: true);
        m_Player_ESC = m_Player.FindAction("ESC", throwIfNotFound: true);
        // UI Behaviour
        m_UIBehaviour = asset.FindActionMap("UI Behaviour", throwIfNotFound: true);
        m_UIBehaviour_ClickUI = m_UIBehaviour.FindAction("Click UI", throwIfNotFound: true);
        m_UIBehaviour_MoveToPreviousUI = m_UIBehaviour.FindAction("Move To Previous UI", throwIfNotFound: true);
        m_UIBehaviour_MoveToNextUI = m_UIBehaviour.FindAction("Move To Next UI", throwIfNotFound: true);
        m_UIBehaviour_LeftKey = m_UIBehaviour.FindAction("LeftKey", throwIfNotFound: true);
        m_UIBehaviour_RightKey = m_UIBehaviour.FindAction("RightKey", throwIfNotFound: true);
        m_UIBehaviour_ESC = m_UIBehaviour.FindAction("ESC", throwIfNotFound: true);
        // Debug
        m_Debug = asset.FindActionMap("Debug", throwIfNotFound: true);
        m_Debug_Return = m_Debug.FindAction("Return", throwIfNotFound: true);
        m_Debug_ToggleDebug = m_Debug.FindAction("ToggleDebug", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Dash;
    private readonly InputAction m_Player_BasicAttack;
    private readonly InputAction m_Player_SpecialAttack;
    private readonly InputAction m_Player_ActiveSkill;
    private readonly InputAction m_Player_Interaction;
    private readonly InputAction m_Player_UI;
    private readonly InputAction m_Player_ESC;
    public struct PlayerActions
    {
        private @CombinedInputActions m_Wrapper;
        public PlayerActions(@CombinedInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Dash => m_Wrapper.m_Player_Dash;
        public InputAction @BasicAttack => m_Wrapper.m_Player_BasicAttack;
        public InputAction @SpecialAttack => m_Wrapper.m_Player_SpecialAttack;
        public InputAction @ActiveSkill => m_Wrapper.m_Player_ActiveSkill;
        public InputAction @Interaction => m_Wrapper.m_Player_Interaction;
        public InputAction @UI => m_Wrapper.m_Player_UI;
        public InputAction @ESC => m_Wrapper.m_Player_ESC;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Dash.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                @BasicAttack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBasicAttack;
                @BasicAttack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBasicAttack;
                @BasicAttack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBasicAttack;
                @SpecialAttack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpecialAttack;
                @SpecialAttack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpecialAttack;
                @SpecialAttack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpecialAttack;
                @ActiveSkill.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnActiveSkill;
                @ActiveSkill.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnActiveSkill;
                @ActiveSkill.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnActiveSkill;
                @Interaction.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteraction;
                @UI.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUI;
                @UI.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUI;
                @UI.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnUI;
                @ESC.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnESC;
                @ESC.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnESC;
                @ESC.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnESC;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @BasicAttack.started += instance.OnBasicAttack;
                @BasicAttack.performed += instance.OnBasicAttack;
                @BasicAttack.canceled += instance.OnBasicAttack;
                @SpecialAttack.started += instance.OnSpecialAttack;
                @SpecialAttack.performed += instance.OnSpecialAttack;
                @SpecialAttack.canceled += instance.OnSpecialAttack;
                @ActiveSkill.started += instance.OnActiveSkill;
                @ActiveSkill.performed += instance.OnActiveSkill;
                @ActiveSkill.canceled += instance.OnActiveSkill;
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
                @UI.started += instance.OnUI;
                @UI.performed += instance.OnUI;
                @UI.canceled += instance.OnUI;
                @ESC.started += instance.OnESC;
                @ESC.performed += instance.OnESC;
                @ESC.canceled += instance.OnESC;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI Behaviour
    private readonly InputActionMap m_UIBehaviour;
    private IUIBehaviourActions m_UIBehaviourActionsCallbackInterface;
    private readonly InputAction m_UIBehaviour_ClickUI;
    private readonly InputAction m_UIBehaviour_MoveToPreviousUI;
    private readonly InputAction m_UIBehaviour_MoveToNextUI;
    private readonly InputAction m_UIBehaviour_LeftKey;
    private readonly InputAction m_UIBehaviour_RightKey;
    private readonly InputAction m_UIBehaviour_ESC;
    public struct UIBehaviourActions
    {
        private @CombinedInputActions m_Wrapper;
        public UIBehaviourActions(@CombinedInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ClickUI => m_Wrapper.m_UIBehaviour_ClickUI;
        public InputAction @MoveToPreviousUI => m_Wrapper.m_UIBehaviour_MoveToPreviousUI;
        public InputAction @MoveToNextUI => m_Wrapper.m_UIBehaviour_MoveToNextUI;
        public InputAction @LeftKey => m_Wrapper.m_UIBehaviour_LeftKey;
        public InputAction @RightKey => m_Wrapper.m_UIBehaviour_RightKey;
        public InputAction @ESC => m_Wrapper.m_UIBehaviour_ESC;
        public InputActionMap Get() { return m_Wrapper.m_UIBehaviour; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIBehaviourActions set) { return set.Get(); }
        public void SetCallbacks(IUIBehaviourActions instance)
        {
            if (m_Wrapper.m_UIBehaviourActionsCallbackInterface != null)
            {
                @ClickUI.started -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnClickUI;
                @ClickUI.performed -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnClickUI;
                @ClickUI.canceled -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnClickUI;
                @MoveToPreviousUI.started -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnMoveToPreviousUI;
                @MoveToPreviousUI.performed -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnMoveToPreviousUI;
                @MoveToPreviousUI.canceled -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnMoveToPreviousUI;
                @MoveToNextUI.started -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnMoveToNextUI;
                @MoveToNextUI.performed -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnMoveToNextUI;
                @MoveToNextUI.canceled -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnMoveToNextUI;
                @LeftKey.started -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnLeftKey;
                @LeftKey.performed -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnLeftKey;
                @LeftKey.canceled -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnLeftKey;
                @RightKey.started -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnRightKey;
                @RightKey.performed -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnRightKey;
                @RightKey.canceled -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnRightKey;
                @ESC.started -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnESC;
                @ESC.performed -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnESC;
                @ESC.canceled -= m_Wrapper.m_UIBehaviourActionsCallbackInterface.OnESC;
            }
            m_Wrapper.m_UIBehaviourActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ClickUI.started += instance.OnClickUI;
                @ClickUI.performed += instance.OnClickUI;
                @ClickUI.canceled += instance.OnClickUI;
                @MoveToPreviousUI.started += instance.OnMoveToPreviousUI;
                @MoveToPreviousUI.performed += instance.OnMoveToPreviousUI;
                @MoveToPreviousUI.canceled += instance.OnMoveToPreviousUI;
                @MoveToNextUI.started += instance.OnMoveToNextUI;
                @MoveToNextUI.performed += instance.OnMoveToNextUI;
                @MoveToNextUI.canceled += instance.OnMoveToNextUI;
                @LeftKey.started += instance.OnLeftKey;
                @LeftKey.performed += instance.OnLeftKey;
                @LeftKey.canceled += instance.OnLeftKey;
                @RightKey.started += instance.OnRightKey;
                @RightKey.performed += instance.OnRightKey;
                @RightKey.canceled += instance.OnRightKey;
                @ESC.started += instance.OnESC;
                @ESC.performed += instance.OnESC;
                @ESC.canceled += instance.OnESC;
            }
        }
    }
    public UIBehaviourActions @UIBehaviour => new UIBehaviourActions(this);

    // Debug
    private readonly InputActionMap m_Debug;
    private IDebugActions m_DebugActionsCallbackInterface;
    private readonly InputAction m_Debug_Return;
    private readonly InputAction m_Debug_ToggleDebug;
    public struct DebugActions
    {
        private @CombinedInputActions m_Wrapper;
        public DebugActions(@CombinedInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Return => m_Wrapper.m_Debug_Return;
        public InputAction @ToggleDebug => m_Wrapper.m_Debug_ToggleDebug;
        public InputActionMap Get() { return m_Wrapper.m_Debug; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugActions set) { return set.Get(); }
        public void SetCallbacks(IDebugActions instance)
        {
            if (m_Wrapper.m_DebugActionsCallbackInterface != null)
            {
                @Return.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnReturn;
                @ToggleDebug.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnToggleDebug;
                @ToggleDebug.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnToggleDebug;
                @ToggleDebug.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnToggleDebug;
            }
            m_Wrapper.m_DebugActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
                @ToggleDebug.started += instance.OnToggleDebug;
                @ToggleDebug.performed += instance.OnToggleDebug;
                @ToggleDebug.canceled += instance.OnToggleDebug;
            }
        }
    }
    public DebugActions @Debug => new DebugActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    private int m_PadSchemeIndex = -1;
    public InputControlScheme PadScheme
    {
        get
        {
            if (m_PadSchemeIndex == -1) m_PadSchemeIndex = asset.FindControlSchemeIndex("Pad");
            return asset.controlSchemes[m_PadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnBasicAttack(InputAction.CallbackContext context);
        void OnSpecialAttack(InputAction.CallbackContext context);
        void OnActiveSkill(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnUI(InputAction.CallbackContext context);
        void OnESC(InputAction.CallbackContext context);
    }
    public interface IUIBehaviourActions
    {
        void OnClickUI(InputAction.CallbackContext context);
        void OnMoveToPreviousUI(InputAction.CallbackContext context);
        void OnMoveToNextUI(InputAction.CallbackContext context);
        void OnLeftKey(InputAction.CallbackContext context);
        void OnRightKey(InputAction.CallbackContext context);
        void OnESC(InputAction.CallbackContext context);
    }
    public interface IDebugActions
    {
        void OnReturn(InputAction.CallbackContext context);
        void OnToggleDebug(InputAction.CallbackContext context);
    }
}
